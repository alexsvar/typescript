"use strict";
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"classes.js","sourceRoot":"","sources":["../classes.ts"],"names":[],"mappings":"","sourcesContent":["// // CLASSES\n// // CREATING A CLASS\n// class User {\n//   constructor(name: string) {\n//     this.name = name;\n//   }\n//   name: string;\n// }\n// const user1 = new User('Alex');\n// console.log(user1);\n// user1.name = 'Alexey';\n// console.log(user1);\n// // Чтобы было не инициализированно свойство role, чтобы использовать классы как интерфейсы,\n// // 1. В tsconfig нужно свойство strictPropertyInitialization установить в false:\n// // \"strictPropertyInitialization\": true; Check for class properties that are declared but not set in the constructor.\n// // 2. Пославить после role восклицательный знак: role!: number;\n// class Admin {\n//   role: number;\n// }\n// const admin = new Admin();\n// admin.role = 1;\n// //\n// // CONSTRUCTOR\n// // В TS нельзя типизировать возврат constructor.\n// class User {\n//   constructor();\n//   constructor(name: string);\n//   constructor(age: number);\n//   constructor(name: string, age: number);\n//   constructor(nameOrAge?: string | number, age?: number) {\n//     if (typeof nameOrAge === 'string') this.name = nameOrAge;\n//     else if (typeof nameOrAge === 'number') this.age = nameOrAge;\n//     if (typeof age === 'number') this.age = age;\n//   }\n//   name: string;\n//   age: number;\n// }\n// const user1 = new User('Alex');\n// // Чтобы создать instance класса User без имени, нужно определить в классе\n// // overload function (функции перегрузки) - в данном случае, пустой constructor.\n// // Это будет означать что поле name должно быть хоть в одном конструкторе\n// // экземпляра класса User.\n// const user2 = new User();\n// const user3 = new User(33);\n// const user4 = new User('Alex', 33);\n//\n// // METHODS\n// // Метод - функция, которая находится внутри класса и выполняет какие-либо действия.\n// enum PaymentStatus {\n//   Holded,\n//   Processed,\n//   Reversed\n// }\n// class Payment {\n//   constructor(id: number) {\n//     this.id = id;\n//   }\n//   id: number;\n//   status: PaymentStatus = PaymentStatus.Holded;\n//   createdAt: Date = new Date();\n//   updatedAt: Date;\n//   getPaymentLifeTime(): number {\n//     return new Date().getTime() - this.createdAt.getTime();\n//   }\n//   unholdPayment(): void {\n//     if (this.status == PaymentStatus.Processed)\n//       throw new Error('Платёж не может быть возвращён.');\n//     this.status = PaymentStatus.Reversed;\n//     this.updatedAt = new Date();\n//   }\n// }\n// const payment = new Payment(1);\n// payment.unholdPayment();\n// console.log(payment);\n// const time = payment.getPaymentLifeTime();\n// console.log(time);\n//\n// // EXERCISE 5: OVERLOAD METHOD\n// // overload methods:\n// class User {\n//   skills: string[];\n//   addSkill(skill: string): void;\n//   addSkill(skills: string[]): void;\n//   addSkill(skillOrSkills: string | string[]): void {\n//     if (typeof skillOrSkills == 'string') this.skills.push(skillOrSkills);\n//     else this.skills.concat(skillOrSkills);\n//   }\n// }\n// // overload functions:\n// function run(distance: number): number;\n// function run(distance: string): string;\n// function run(distance: number | string): number | string {\n//   if (typeof distance === 'number') return 1;\n//   else return '';\n// }\n//\n// // GETTERS & SETTERS\n// // То что возвращает getter, то и должен получать setter.\n// // Объявляя только getter без setter, свойство login становится readonly.\n// // Setters & getters не могут быть асинхронными.\n// class User {\n//   _login: string;\n//   password: string;\n//   createdAt: Date;\n//   set login(log: string | number) {\n//     this._login = 'user-' + log;\n//     this.createdAt = new Date();\n//   }\n//   get login() {\n//     return this._login;\n//   }\n//   async getPassword(pass: string) {}\n// }\n// const user1 = new User();\n// user1.login = 'myLogin';\n// console.log(user1);\n// console.log(user1.login);\n//\n// // IMPLEMENTATION\n//\n// interface ILogger {\n//   log(...args: any[]): void;\n//   error(...args: any[]): void;\n// }\n// class Logger implements ILogger {\n//   log(...args: any[]): void {\n//     console.log(...args);\n//   }\n//   async error(...args: any[]): Promise<void> {\n//     console.log(...args);\n//   }\n// }\n// interface IPayable {\n//   pay(paymentId: number): void;\n//   price?: number;\n// }\n// interface IDeletable {\n//   delete(): void;\n// }\n// class User implements IPayable, IDeletable {\n//   delete(): void {\n//     throw new Error('Method not implemented.');\n//   }\n//   pay(paymentId: number | string): void {\n//     // ...\n//   }\n// }\n//\n// // EXTENDS\n// //\n// type PaymentStatus = 'new' | 'paid';\n// class Payment {\n//   constructor(id: number) {\n//     this.id = id;\n//   }\n//   id: number;\n//   status: PaymentStatus = 'new';\n//   pay() {\n//     this.status = 'paid';\n//   }\n// }\n// class PersistedPayment extends Payment {\n//   constructor() {\n//     const id = Math.random();\n//     super(id);\n//   }\n//   databaseId: number;\n//   paidAt: Date;\n//   save() {\n//     //\n//   }\n//   // Override method - переопределение метода.\n//   override pay(date?: Date) {\n//     // super.pay();\n//     if (date) {\n//       this.paidAt = date;\n//     }\n//   }\n// }\n//\n// // FEATURES OF INHERITANCE\n//\n// class User {\n//   constructor() {\n//     console.log(this.name);\n//   }\n//   name: string = 'user';\n// }\n// class Admin extends User {\n//   constructor() {\n//     super();\n//     console.log(this.name);\n//   }\n//   name: string = 'admin';\n// }\n// new Admin();\n// new Error('');\n\n// class HttpError extends Error {\n//   constructor(message: string, code?: number) {\n//     super(message);\n//     this.code = code ?? 500;\n//   }\n//   code: number;\n// }\n//\n// // COMPOSITION VS INHERITANCE\n// // Наследование нужно использовать когда:\n// // Мы наследуемся в рамках одной доменной области.\n// // Наследование не нужно использовать когда:\n// // Мы наследуемся от сложных встроенных массивов\n// class User {\n//   constructor(name: string) {\n//     this.name = name;\n//   }\n//   name: string;\n// }\n//\n// class Users extends Array<User> {\n//   searchByName(name: string) {\n//     return this.filter((u) => u.name === name);\n//   }\n//   override toString(): string {\n//     return this.map((u) => u.name).join(', ');\n//   }\n// }\n// const users = new Users();\n// users.push(new User('Vasya'));\n// users.push(new User('Petya'));\n// console.log(users.toString());\n//\n// class UserList {\n//   users: User[];\n//   push(u: User) {\n//     this.users.push(u);\n//   }\n// }\n//\n// class Payment {\n//   date: Date;\n// }\n// // Inheritance:\n// class UserWithPayment1 extends Payment {\n//   name: string;\n// }\n// // Composition:\n// class UserWithPayment2 {\n//   constructor(user: User, payment: Payment) {\n//     this.user = user;\n//     this.payment = payment;\n//   }\n//   user: User;\n//   payment: Payment;\n// }\n//\n// // VISIBILITY OF PROPERTIES\n// // public - публичные свойства, доступные внутри класса и снаружи.\n// // private - привантные свойства, доступные только внутри класса.\n// // protected - защищённые свойства, доступные внутри класса и внутри наследуемого класса.\n// class Vehicle {\n//   public make: string;\n//   private damages: string[];\n//   private _model: string;\n//   protected run: number;\n//   #price: number;\n//   set model(m: string) {\n//     this._model = m;\n//   }\n//   get model() {\n//     return this._model;\n//   }\n//   isPriceEqual(v: Vehicle) {\n//     return this.#price === v.#price;\n//   }\n//   addDamage(damage: string) {\n//     this.damages.push(damage);\n//   }\n// }\n// class EuroTruck extends Vehicle {\n//   setRun(km: number) {\n//     this.run = km / 0.62;\n//     // this.damages; // error\n//   }\n// }\n// new Vehicle();\n//\n// // EXERCISE 5: CREATING PRODUCT'S CART\n// // Необходимо сделать корзину (Cart) на сайте,\n// // которая имееет список продуктов (Product), добавленных в корзину\n// // и переметры доставки (Delivery). Для Cart реализовать методы:\n// // - Добавить продукт в корзину\n// // - Удалить продукт из корзины по ID\n// // - Посчитать стоимость товаров в корзине\n// // - Задать доставку\n// // - Checkout - вернуть что всё ок, если есть продукты и параметры доставки\n// // Product: id, название и цена\n// // Delivery: может быть как до дома (дата и адрес) или до пункта выдачи (дата = Сегодня и Id магазина)\n//\n// class Product {\n//   constructor(public id: number, public name: string, public price: number) {}\n// }\n// class Delivery {\n//   constructor(public date: Date) {}\n// }\n// class HomeDelivery extends Delivery {\n//   constructor(date: Date, public address: string) {\n//     super(date);\n//   }\n// }\n// class ShopDelivery extends Delivery {\n//   constructor(public shopId: string) {\n//     super(new Date());\n//   }\n// }\n// type DeliveryOptions = HomeDelivery | ShopDelivery;\n// class Cart {\n//   private products: Product[] = [];\n//   private delivery: DeliveryOptions;\n//\n//   public addProductToCart(product: Product): void {\n//     this.products.push(product);\n//   }\n//   public removeProductFromCart(id: number): void {\n//     this.products = this.products.filter((p: Product) => p.id !== id);\n//   }\n//   public countTotalPrice(): number {\n//     return this.products\n//       .map((p: Product) => p.price)\n//       .reduce((acc: number, p: number) => {\n//         return acc + p;\n//       }, 0);\n//   }\n//   public setDelivery(delivery: DeliveryOptions): void {\n//     this.delivery = delivery;\n//   }\n//   public checkout() {\n//     if (this.products.length === 0)\n//       throw new Error('Добавьте товар в корзину!');\n//     if (!this.delivery) throw new Error('Укажите способ доставки!');\n//     return { success: true };\n//   }\n// }\n// const cart = new Cart();\n// cart.addProductToCart(new Product(1, 'Печенье', 10));\n// cart.addProductToCart(new Product(2, 'Вафли', 20));\n// cart.addProductToCart(new Product(3, 'Торт', 35));\n// cart.removeProductFromCart(1);\n// cart.setDelivery(new HomeDelivery(new Date(), \"unost' street\"));\n// console.log(cart.countTotalPrice());\n// console.log(cart.checkout());\n//\n// // STATIC PROPERTIES\n// // static - статические свойства, которые\n// // 1. Не требуют создания instance.\n// // 2. Вызываются через название класса.\n// // 3. В статичные методы мы не можем передавать никакие внутренние данные.\n// // UserService.db\n// class UserService {\n//   constructor(id: number) {}\n//   // Приватное статическое поле\n//   private static db: any;\n//   // Статический метод\n//   static getUser(id: number) {\n//     this.db.findById(id);\n//   }\n//   // Статичные блоки (инициализатор статичного класса)\n//   // Код статичного блока будет выполнен сразу после запуска.\n//   // Внутри нельзя использовать ничего асинхронного.\n//   static {\n//     UserService.db = 'dataBase';\n//   }\n//   // Динамические метод создания\n//   create() {\n//     UserService.db;\n//   }\n// }\n// UserService.getUser(1);\n//\n// // WORK WITH THIS\n// class Payment {\n//   private date: Date = new Date();\n//   getDate(this: Payment) {\n//     return this.date;\n//   }\n//   getDateArrow = () => {\n//     return this.date;\n//   };\n// }\n// const p = new Payment();\n//\n// const user = {\n//   id: 1,\n//   paymentDate: p.getDate.bind(p),\n//   paymentDateArrow: p.getDateArrow\n// };\n// console.log(p.getDate());\n// console.log(user.paymentDate());\n// console.log(user.paymentDateArrow());\n//\n// class PaymentPersistent extends Payment {\n//   save() {\n//     return this.getDateArrow();\n//   }\n// }\n// console.log(new PaymentPersistent().save());\n//\n// // THIS TYPIFICATION\n// class UserBuilder {\n//   name: string;\n//   setName(name: string): this {\n//     this.name = name;\n//     return this;\n//   }\n//   isAdmin(): this is AdminBuilder {\n//     return this instanceof AdminBuilder;\n//   }\n// }\n// class AdminBuilder extends UserBuilder {\n//   roles: string[];\n// }\n// const res1 = new UserBuilder().setName('Vasya');\n// const res2 = new AdminBuilder().setName('Vasya');\n//\n// let user: UserBuilder | AdminBuilder = new UserBuilder();\n// if (user.isAdmin()) console.log(user);\n// else console.log(user);\n//\n// // ABSTRACT CLASSES\n// // Абстрактные методы могут использоваться в абстрактных классах.\n// abstract class Controller {\n//   abstract handle(req: any): void;\n//   handleWithLogs(req: any) {\n//     console.log('start');\n//     this.handle(req);\n//     console.log('end');\n//   }\n// }\n// class UserController extends Controller {\n//   handle(req: any): void {\n//     console.log(req);\n//   }\n// }\n// // new Controller() // error\n// const uc = new UserController();\n// uc.handleWithLogs('Request');\n//\n// // EXERCISE 6: CREATING ABSTRACT LOGGER\n// abstract class Logger {\n//   abstract log(message: string): void;\n//   printDate(date: Date): void {\n//     this.log(date.toString());\n//   }\n// }\n//\n// class MyLogger extends Logger {\n//   log(message: string): void {\n//     console.log(message);\n//   }\n//   logWithDate(): void {\n//     this.printDate(new Date());\n//     this.log('Created abstract class');\n//   }\n// }\n// const logger = new MyLogger();\n// logger.logWithDate();\n"]}