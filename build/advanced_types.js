"use strict";
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"advanced_types.js","sourceRoot":"","sources":["../advanced_types.ts"],"names":[],"mappings":"","sourcesContent":["// // ADVANCED TYPES\n// // UNION\n// // Union используется для возможности обозначить,\n// // что в той или иной переменной у нас могут находиться\n// // различные типы при различных обстоятельствах.\n// // const arr: (string | number)[] = ['str', 1];\n//\n// // string, number, boolean:\n// function logId(id: string | number | boolean) {\n//   // Cужение типов для union types:\n//   if (typeof id === 'string') {\n//     console.log(id);\n//   } else if (typeof id === 'number') {\n//     console.log(id);\n//   } else {\n//     console.log(id);\n//   }\n// }\n// logId(1);\n// logId('str');\n// logId(true);\n//\n// // arrays:\n// function logError(err: string | string[]) {\n//   if (Array.isArray(err)) {\n//     console.log(err);\n//   } else {\n//     console.log(err);\n//   }\n// }\n//\n// // objects:\n// function logObject(obj: { a: number } | { b: number }) {\n//   if ('a' in obj) {\n//     console.log(obj.a);\n//   } else {\n//     console.log(obj.b);\n//   }\n// }\n//\n// // parameters with similar types:\n// function logMultipleIds(a: string | number, b: string | boolean) {\n//   if (a === b) {\n//   } else {\n//     console.log(a);\n//   }\n// }\n//\n// // LITERAL\n// // Можно сделать enum\n// // enum RequestType {\n// //   GET = 'get',\n// //   POST = 'post'\n// // }\n// // enum делать для каждого такого случая является плохой практикой.\n// //\n// // string literal types:\n// function fetchWithAuth(url: string, method: 'post' | 'get'): 1 | -1 {\n//   return 1;\n// }\n//\n// // Когда объявляем константу const a = 'str', то у a будет тип 'str'.\n// // В таком виде тип бесполезен, мы ничего другого присвоить не можем.\n// const a = 'str';\n//\n// // Если мы объявим переменную b let b = 'asdasd', то тип будет 'string'.\n// // Но мы можем чётко написать let b: 'asdasd' = 'asdasd'\n// // и b становится константой.\n// let b: 'asdasd' = 'asdasd';\n//\n// // На фронте используется в React для задания props\n// fetchWithAuth('http://asd.asd', 'get');\n//\n// // Если явно не указать тип 'post', то будет ошибка, потому что идёт проверка на тип.\n// // let method: 'post' = 'post';\n// // Или можем сделать method константой.\n// // const method = 'post';\n// // Или же можем сделать каст к другому типу.\n// // Но если в переменную мы передадим что-то другое, то типизация не покажет ошибку.\n// let method = 'post';\n// fetchWithAuth('http://asd.asd', method as 'post');\n//\n// // ALIASES (TYPES)\n// // Позволяет более эффективно записывать типы.\n// // Объявляется с помощью ключевого слова httpMethod.\n// type httpMethod = 'post' | 'get';\n// function fetchWithAuth(url: string, method: httpMethod): 1 | -1 {\n//   return 1;\n// }\n//\n// type User = {\n//   name: string;\n//   age: number;\n//   skills: string[];\n// };\n// type Role = {\n//   name: string;\n//   id: number;\n// };\n// Можно создать intersection User2WithRole2, который будет типа User2 & Role2.\n// Через \"|\" мы обозначаем union (или 1 или 2 ...).\n// Через \"&\" мы обозначаем intersection (объединение, и 1 и 2).\n// type UserWithRole = User & Role;\n// let user: UserWithRole = {\n//   name: 'Alex',\n//   age: 36,\n//   skills: ['1', '2'],\n//   id: 1\n// };\n//\n// // INTERFACES\n// interface User {\n//   name: string;\n//   age: number;\n//   skills: string[];\n// }\n// interface Role {\n//   roleId: number;\n// }\n// interface UserWithRole extends User, Role {\n//   createdAt: Date;\n// }\n// let user: UserWithRole = {\n//   name: 'Alex',\n//   age: 36,\n//   skills: ['1', '2'],\n//   roleId: 1,\n//   createdAt: new Date()\n// };\n//\n// functions:\n// function log in interface User1\n// interface User {\n//   name: string;\n//   age: number;\n//   skills: string[];\n//\n//   log: (id: number) => string;\n// }\n// interface Role {\n//   roleId: number;\n// }\n//\n// interface User1WithRole1 extends User, Role {\n//   createdAt: Date;\n// }\n// let user3: User1WithRole1 = {\n//   name: 'Alex',\n//   age: 36,\n//   skills: ['1', '2'],\n//   roleId: 1,\n//   createdAt: new Date(),\n//\n//   log(id) {\n//     return '';\n//   }\n// };\n//\n// interface UserDictionary {\n//   [index: number]: User;\n// }\n//\n// // TYPES OR INTERFACES\n// // interfaces:\n// // Один interface может дополнять другой, но это bad practice.\n// // Такой код плохо поддерживаемый. Но это может быть полезным\n// // при использовании типов из какой-либо библиотеки.\n// // С type так делать нельзя.\n// interface User {\n//   name: string;\n// }\n// interface User {\n//   age: number;\n// }\n// const user: User = {\n//   name: 'Alex',\n//   age: 33\n// };\n// //\n// // types:\n// // Позволяют расширяться от примитивных типов.\n// // С interfaces так нельзя. Interfaces позволяют\n// // работать с объектами, с описанием классов, но не с простыми типами.\n// // Только внутри interface могут содержаться простые типы.\n// type ID = string | number;\n// interface IDS {\n//   ID: string | number;\n// }\n// //\n// // Рекомендации к использванию:\n// // types: Для использования примитивных типов.\n// // interface: Для работы с объектами и описания классов.\n//\n// // OPTIONAL\n// // optional \"?\":\n// // interfaces:\n// interface User {\n//   login: string;\n//   password?: string;\n// }\n// const user: User = {\n//   login: 'alex@mail.ru'\n// };\n//\n// // types:\n// type User = {\n//   login: string;\n//   password?: string;\n// };\n// const user: User = {\n//   login: 'alex@mail.ru'\n// };\n//\n// // Запись ниже не эквивалентна использованию optional\n// // и выдаст ошибку.\n// type User = {\n//   login: string;\n//   password: string | undefined;\n// };\n// const user: User = {\n//   login: 'alex@mail.ru'\n// };\n//\n// // functions:\n// // в аргументах функции optional по типу эквивалентен\n// // записи number | undefined.\n// function multiply(first: number, second?: number): number {\n//   if (!second) return first * first;\n//   return first * second;\n// }\n// //\n// // objects:\n// interface UserPro {\n//   login: 'alex@mail.ru';\n//   password?: {\n//     type: 'primary' | 'secondary';\n//   };\n// }\n// // Запись const t = user.password!.type эквивалентна записи\n// // const t = user.password.type ? user.password.type : undefined\n// function testPass(user: UserPro) {\n//   const t = user.password?.type;\n// }\n// //\n// // optional \"!\":\n// // Означает что мы уверены на 100%, что пароль не будет undefined.\n// // Он всегда будет иметь тип.\n// // function testPass(user: UserPro) {\n// //   const t = user.password!.type;\n// // }\n//\n// // nullish coalescing:\n// // Запись const t = param ?? multiply(5) проверяет,\n// // если param равен null или undefined, то в данном случае\n// // мы выполняем эту функцию и возвращаем результат в t.\n// function test(param?: string) {\n//   const t = param ?? multiply(5);\n// }\n//\n// // EXERCISE 3: TYPIFICATION OF SERVER'S RESPONSE\n// // Запрос в виде платежа\n// {\n// \t\"sum\": 10000,\n// \t\"from\": 2,\n// \t\"to\": 4\n// }\n// // Ответ\n// [\n// \t{\n// \t\t\"status\": \"success\",\n// \t\t\"data\": {\n// \t\t\t\"databaseId\": 567,\n// \t\t\t\"sum\": 10000,\n// \t\t\t\"from\": 2,\n// \t\t\t\"to\": 4\n// \t\t},\n// \t},\n// \t{\n// \t\t\"status\": \"failed\",\n// \t\t\"data\": {\n// \t\t\t\"errorMessage\": \"Недостаточно средств\",\n// \t\t\t\"errorCode\": 4\n// \t\t}\n// \t}\n// ]\n//\n// my way:\n// request:\n// interface Payment {\n//   sum: number;\n//   from: number;\n//   to: number;\n// }\n// interface PaymentServerRequest extends Payment {}\n// const request: PaymentServerRequest = {\n//   sum: 10000,\n//   from: 2,\n//   to: 4\n// };\n// //\n// // response:\n// interface IPaymentStatus {\n//   Success: string;\n//   Failed: string;\n// }\n// interface SuccessResponseData extends Payment {\n//   databaseId: number;\n// }\n// interface FailedResponseData {\n//   errorMessage: string;\n//   errorCode: number;\n// }\n// interface SuccessServerResponse {\n//   status: 'success';\n//   data: SuccessResponseData;\n// }\n// interface FailedServerResponse {\n//   status: 'failed';\n//   data: FailedResponseData;\n// }\n// const successServerResponse: SuccessServerResponse = {\n//   status: 'success',\n//   data: {\n//     databaseId: 567,\n//     sum: 10000,\n//     from: 2,\n//     to: 4\n//   }\n// };\n// const failedServerResponse: FailedServerResponse = {\n//   status: 'failed',\n//   data: {\n//     errorMessage: 'Недостаточно средств',\n//     errorCode: 4\n//   }\n// };\n//\n// // VOID\n// void обозначает, что функция ничего не возвращает\n// function logId(id: string | number): void {\n//   console.log(id);\n// }\n// const a = logId(1);\n//\n// function multiply(b: number, c?: number): number | void {\n//   if (!c) return b * b;\n// }\n//\n// type voidFunc = () => void;\n// const f1: voidFunc = () => {};\n// const f2: voidFunc = () => true;\n// const b = f2();\n//\n// const skills = ['dev', 'devOps'];\n// const user = {\n//   s: ['s']\n// };\n// skills.forEach((skill) => user.s.push(skill));\n//\n// // UNKNOWN\n// Тип unknown означает, что мы не знаем что у нас лежит в переменной.\n// Мы не можем unknown положить в любую переменную, пока не сделаем\n// приведение типов или не определим, что это за тип.\n// let input: unknown;\n// input = 3;\n// input = 'str';\n// input = ['str1', 'str2'];\n//\n// function run(i: unknown) {\n//   if (typeof i == 'number') i++;\n//   else i;\n// }\n// run(input);\n//\n// // try...catch:\n// async function getData() {\n//   try {\n//     await fetch('');\n//   } catch (error) {\n//     if (error instanceof Error) console.log(error.message);\n//   }\n// }\n//\n// async function getDataForce() {\n//   try {\n//     await fetch('');\n//   } catch (error) {\n//     const e = error as Error;\n//     console.log(e.message);\n//   }\n// }\n//\n// // unknown и другие типы:\n// // при union unknown и любого другого типа буд unknown.\n// type U1 = unknown | null;\n//\n// // intersection:\n// // Intersection unknown | любой другой тип - даёт другой тип.\n// type I1 = unknown & string;\n//\n// // NEVER\n// // Тип never означает что никогда такого не произойдёт.\n// // Функция genenrateError никогда ничего не вернёт.\n// function generateError(message: string): never {\n//   throw new Error(message);\n// }\n// // Внутри функции цикл никогда не закончится,\n// // значит функция никогда ничего не вернёт.\n// function dumpError(): never {\n//   while (true) {}\n// }\n// // Типу never ничег нельзя присвоить:\n// // const a: never = 1; // error\n// // const a: never = null; // error\n// // Можно давать в качестве имени _, чтобы typescript\n// // не ругался на неиспользуемую переменную:\n// // const _: never;\n// //\n// // Проверка с помощью never, что мы никогда не зайдём в ту или иную ветку:\n// type paymentAction = 'refund' | 'checkout' | 'reject';\n// function processAction(action: paymentAction) {\n//   switch (action) {\n//     case 'refund':\n//       // ...\n//       break;\n//     case 'checkout':\n//       // ...\n//       break;\n//     case 'reject':\n//       // ...\n//       break;\n//     default:\n//       const _: never = action;\n//       throw new Error('This action is not exists...');\n//   }\n// }\n//\n// // Исчерпывающая проверка, когда функция, которая возвращает never,\n// // помогает улучшить ситуацию. В данном случае, функция generateError\n// // убирает ошибку с возвращаемым значением типа boolean.\n//\n// function isString(x: string | number): boolean {\n//   if (typeof x === 'string') return true;\n//   if (typeof x === 'number') return false;\n//   generateError('Error message');\n// }\n//\n// // NULL\n// // Тип null строго null, ему нельзя присвоить значение undefined.\n// // В number/string/boolean/undefined нельзя положить null.\n// // За это отвечает опция в tsconfig:\n// // \"strictNullChecks\": true; - When type checking, take into account 'null' and 'undefined'.\n// const n: null = null;\n// const n1: any = null;\n// // const n2: number = null; // error\n// // const n3: string = null; // error\n// // const n4: boolean = null; // error\n// // const n4: undefined = null; // error\n// //\n// interface User {\n//   name: string;\n// }\n// function getUser() {\n//   if (Math.random() > 0.5) return null;\n//   else return { name: 'Вася' } as User;\n// }\n// const user = getUser();\n// if (user) {\n//   const userName = user.name;\n// }\n// //\n// //\n// // Отличия между null и undefined:\n// // null - явно заданный неопределённый объект.\n// // undefined - говорит, что мы не задали объект.\n//\n// // TYPE CONVERSION\n//\n// Преобразование числа в строку:\n// let num: number = 5;\n// let str1: string = num.toString();\n// let str2: string = new String(num).valueOf();\n// let bool: boolean = new Boolean(num).valueOf();\n//\n// // Преобразование строки в число:\n// let str = 'full_string';\n// let num1: number = +str;\n// let enum2: number = parseInt(str);\n//\n// // Преобразование объектов:\n// interface User {\n//   name: string;\n//   email: string;\n//   login: string;\n// }\n// // Способ 1: явное указание interface\n// const user1: User = {\n//   name: 'Вася',\n//   email: 'vasily@MediaList.ru',\n//   login: 'Vasya'\n// };\n// // Способ 2: каст к типу\n// const user2 = {\n//   name: 'Саня',\n//   email: 'sanya@MediaList.ru',\n//   login: 'Sanya'\n// } as User;\n// // Способ 3: generic type\n// // Не рекомендуется к использованию.\n// // Его невозможно использовать с React:\n// const user3 = <User>{\n//   name: 'Сергей',\n//   email: 'sergey@MediaList.ru',\n//   login: 'Sergey'\n// };\n// //\n// //\n// interface Admin {\n//   name: string;\n//   role: number;\n// }\n// // Вариант: преобразование user к admin\n// // Минусы: сохраняются ненужные поля email и login.\n// const admin: Admin = {\n//   ...user1,\n//   role: 1\n// };\n// // Правильно делать функции преобразования одного типа в другой:\n// function userToAdmin(user1: User): Admin {\n//   return {\n//     name: user1.name,\n//     role: 1\n//   };\n// }\n//\n// // TYPE GUARD\n// // Type Guard - функция\n// interface User {\n//   name: string;\n//   email: string;\n//   login: string;\n// }\n// const user: User = {\n//   name: 'Alex',\n//   email: 'alex@mail.ru',\n//   login: 'Alex'\n// };\n// interface Admin {\n//   name: string;\n//   role: number;\n// }\n// // Запись функции без использования type guard:\n// // function logId(id: string | number) {\n// //   if (typeof id === 'string') console.log(id);\n// //   // if (typeof id === 'number') console.log(id);\n// //   // id; // id: string | number\n// // }\n// // Простая функция type guard с возвратом:\n// // x is string это boolean.\n// function isString(x: string | number): x is string {\n//   return typeof x === 'string';\n// }\n// // Запись функции с использованием type guard:\n// function logId(id: string | number) {\n//   if (isString(id)) console.log(id);\n//   else console.log(id);\n// }\n// // Функция, которая меняет роль поьзователя:\n// // Type Guard Варинт 1:\n// function isAdmin(user: User | Admin): user is Admin {\n//   return 'role' in user;\n// }\n// // Type Guard Вариант 2:\n// function isAdminAlt(user: User | Admin): user is Admin {\n//   return (user as Admin).role !== undefined;\n// }\n// // Функция, которая меняет роль поьзователя:\n// function setRoleZero(user: User | Admin) {\n//   if (isAdmin(user)) user.role = 0;\n//   else throw new Error('User is not admin');\n// }\n//\n// // EXERCISE 4: MAKING A TYPE GUARD FOR THE RESPONSE\n// interface IPayment {\n//   sum: number;\n//   from: number;\n//   to: number;\n// }\n//\n// enum PaymentStatus {\n//   Success = 'success',\n//   Failed = 'failed'\n// }\n//\n// interface IPaymentRequest extends IPayment {}\n//\n// interface IDataSuccess extends IPayment {\n//   databaseId: number;\n// }\n//\n// interface IDataFailed {\n//   errorMessage: string;\n//   errorCode: number;\n// }\n//\n// interface IResponseSuccess {\n//   status: PaymentStatus.Success;\n//   data: IDataSuccess;\n// }\n//\n// interface IResponseFailed {\n//   status: PaymentStatus.Failed;\n//   data: IDataFailed;\n// }\n// // Code:\n// type f = (res: IResponseSuccess | IResponseFailed) => number;\n// type Res = IResponseSuccess | IResponseFailed;\n//\n// // type guard function:\n// function isSuccess(res: Res): res is IResponseSuccess {\n//   if (res.status === PaymentStatus.Success) return true;\n//   return false;\n// }\n//\n// function getIdFromData(res: Res): number {\n//   if (isSuccess(res)) return res.data.databaseId;\n//   else throw new Error(res.data.errorMessage);\n// }\n"]}